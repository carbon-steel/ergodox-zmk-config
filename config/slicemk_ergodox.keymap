#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

#define LAYER_MAIN 0
#define LAYER_MAC 1
#define LAYER_SYMBOLS 2
#define LAYER_MOVE 3
#define LAYER_MACMOVE 4
#define LAYER_NUMBERS 5
#define LAYER_OFF 6

#define DUMMY 0

&lt {
	flavor = "balanced";
	tapping_term_ms = <200>;
};
&sl {
	/delete-property/ quick-release;
};

/ {
	macros {
		// I introduced these for a reason but I can't remember why. They were for when I had dedicated keys for braces/brackets.
		ZMK_MACRO(macro_right_brace, wait-ms = <0>; tap-ms = <0>; bindings = <&macro_tap &kp RIGHT_BRACE>;)
		ZMK_MACRO(macro_left_brace, wait-ms = <0>; tap-ms = <0>; bindings = <&macro_tap &kp LEFT_BRACE>;)
		ZMK_MACRO(macro_right_bracket, wait-ms = <0>; tap-ms = <0>; bindings = <&macro_tap &kp RIGHT_BRACKET>;)
		ZMK_MACRO(macro_left_bracket, wait-ms = <0>; tap-ms = <0>; bindings = <&macro_tap &kp LEFT_BRACKET>;)

		ZMK_MACRO(macro_to_mac, wait-ms = <0>; tap-ms = <5>; bindings = <&to LAYER_MAC &rgb_ug RGB_COLOR_HSB(128,100,100) &rgb_ug RGB_TOG &bl BL_TOG>;)
		ZMK_MACRO(macro_to_linux, wait-ms = <0>; tap-ms = <5>; bindings = <&to LAYER_MAIN &rgb_ug RGB_TOG &bl BL_TOG>;)
		ZMK_MACRO(macro_shift_j, wait-ms = <0>; tap-ms = <0>; bindings = <&macro_press &kp LSHIFT>, <&macro_tap &kp J>, <&macro_pause_for_release>, <&macro_release &kp LSHIFT>;)
		ZMK_MACRO1(macro_shift_hold, wait-ms = <0>; tap-ms = <0>; bindings
				= <&macro_tap &sk LSHIFT>
				, <&macro_param_1to1>
				, <&macro_press &kp MACRO_PLACEHOLDER>
				, <&macro_pause_for_release>
				, <&macro_param_1to1>
				, <&macro_release &kp MACRO_PLACEHOLDER>;)
		ZMK_MACRO1(macro_num_hold, wait-ms = <0>; tap-ms = <0>; bindings
				= <&macro_tap &sl LAYER_NUMBERS>
				, <&macro_param_1to1>
				, <&macro_press &kp MACRO_PLACEHOLDER>
				, <&macro_pause_for_release>
				, <&macro_param_1to1>
				, <&macro_release &kp MACRO_PLACEHOLDER>;)
		ZMK_MACRO1(macro_sym_hold, wait-ms = <0>; tap-ms = <0>; bindings
				= <&macro_tap &sl LAYER_SYMBOLS>
				, <&macro_param_1to1>
				, <&macro_press &kp MACRO_PLACEHOLDER>
				, <&macro_pause_for_release>
				, <&macro_param_1to1>
				, <&macro_release &kp MACRO_PLACEHOLDER>;)
	};
	behaviors {
		off: disable {
		    compatible = "zmk,behavior-tap-dance";
		    label = "DISABLE";
		    tapping-term-ms = <200>;
		    #binding-cells = <0>;
		    bindings = <&none>, <&none>, <&to LAYER_OFF>;
		};
		on: enable {
		    compatible = "zmk,behavior-tap-dance";
		    label = "ENABLE";
		    tapping-term-ms = <200>;
		    #binding-cells = <0>;
		    bindings = <&none>, <&none>, <&to LAYER_MAIN>;
		};
		bt_clear: bt_clear {
		    compatible = "zmk,behavior-tap-dance";
		    label = "BT_CLEAR";
		    tapping-term-ms = <200>;
		    #binding-cells = <0>;
		    bindings = <&none>, <&none>, <&bt BT_CLR>;
		};
	        bspc_del: backspace_delete {
	            compatible = "zmk,behavior-mod-morph";
		    label = "BACKSPACE_DELETE";
	            #binding-cells = <0>;
	            bindings = <&kp BACKSPACE>, <&kp DELETE>;
	            mods = <(MOD_LSFT|MOD_RSFT)>;
	        };
		// You cannot directly use a behavior with &lt so we need to express it as a new behavior.
		lt_bspc: layer_tap_bspc_del {
		    compatible = "zmk,behavior-hold-tap";
		    label = "LAYER_TAP_BACKSPACE_DELETE";
		    // hold-tap requires two parameters no matter what behaviors you intend for them to trigger
		    // so when you bind this you'll need a dummy placeholder for the second binding cell
		    #binding-cells = <2>;
		    bindings = <&mo>, <&bspc_del>;
		    tapping-term-ms = <200>;
		};
	        caps_tap: caps_tap {
	            compatible = "zmk,behavior-hold-tap";
	            label = "CAPS_TAP";
		    // hold-tap requires two parameters no matter what behaviors you intend for them to trigger
		    // so when you bind this you'll need a dummy placeholder for the second binding cell
	            #binding-cells = <2>;
	            bindings = <&kp>, <&caps_word>;
	            tapping-term-ms = <200>;
	            flavor = "tap-preferred";
	        };
	};
	combo {
		compatible = "zmk,combos";
		combo_colon {
			timeout-ms = <50>;
			key-positions = <41 39>;
			bindings = <&macro_shift_hold SEMICOLON>, <&partial_hold_position 41>;
		};
		combo_apost {
			timeout-ms = <50>;
			key-positions = <41 40>;
			bindings = <&macro_shift_hold APOSTROPHE>, <&partial_hold_position 41>;
		};
		combo_Q {
			timeout-ms = <50>;
			key-positions = <16 54>;
			bindings = <&macro_shift_hold Q>, <&partial_hold_position 54>;
		};
		combo_W {
			timeout-ms = <50>;
			key-positions = <17 54>;
			bindings = <&macro_shift_hold W>, <&partial_hold_position 54>;
		};
		combo_E {
			timeout-ms = <50>;
			key-positions = <18 54>;
			bindings = <&macro_shift_hold E>, <&partial_hold_position 54>;
		};
		combo_R {
			timeout-ms = <50>;
			key-positions = <19 54>;
			bindings = <&macro_shift_hold R>, <&partial_hold_position 54>;
		};
		combo_T {
			timeout-ms = <50>;
			key-positions = <20 54>;
			bindings = <&macro_shift_hold T>, <&partial_hold_position 54>;
		};
		combo_Y {
			timeout-ms = <50>;
			key-positions = <23 41>;
			bindings = <&macro_shift_hold Y>, <&partial_hold_position 41>;
		};
		combo_U {
			timeout-ms = <50>;
			key-positions = <24 41>;
			bindings = <&macro_shift_hold U>, <&partial_hold_position 41>;
		};
		combo_I {
			timeout-ms = <50>;
			key-positions = <25 41>;
			bindings = <&macro_shift_hold I>, <&partial_hold_position 41>;
		};
		combo_O {
			timeout-ms = <50>;
			key-positions = <26 41>;
			bindings = <&macro_shift_hold O>, <&partial_hold_position 41>;
		};
		combo_P {
			timeout-ms = <50>;
			key-positions = <27 41>;
			bindings = <&macro_shift_hold P>, <&partial_hold_position 41>;
		};
		combo_A {
			timeout-ms = <50>;
			key-positions = <30 54>;
			bindings = <&macro_shift_hold A>, <&partial_hold_position 54>;
		};
		combo_S {
			timeout-ms = <50>;
			key-positions = <54 31>;
			bindings = <&macro_shift_hold S>, <&partial_hold_position 54>;
		};
		combo_D {
			timeout-ms = <50>;
			key-positions = <54 32>;
			bindings = <&macro_shift_hold D>, <&partial_hold_position 54>;
		};
		combo_F {
			timeout-ms = <50>;
			key-positions = <54 33>;
			bindings = <&macro_shift_hold F>, <&partial_hold_position 54>;
		};
		combo_G {
			timeout-ms = <50>;
			key-positions = <54 34>;
			bindings = <&macro_shift_hold G>, <&partial_hold_position 54>;
		};
		combo_H {
			timeout-ms = <50>;
			key-positions = <41 35>;
			bindings = <&macro_shift_hold H>, <&partial_hold_position 41>;
		};
		combo_J {
			timeout-ms = <50>;
			key-positions = <41 36>;
			bindings = <&macro_shift_hold J>, <&partial_hold_position 41>;
		};
		combo_K {
			timeout-ms = <50>;
			key-positions = <41 37>;
			bindings = <&macro_shift_hold K>, <&partial_hold_position 41>;
		};
		combo_L {
			timeout-ms = <50>;
			key-positions = <41 38>;
			bindings = <&macro_shift_hold L>, <&partial_hold_position 41>;
		};
		combo_Z {
			timeout-ms = <50>;
			key-positions = <54 42>;
			bindings = <&macro_shift_hold Z>, <&partial_hold_position 54>;
		};
		combo_X {
			timeout-ms = <50>;
			key-positions = <54 43>;
			bindings = <&macro_shift_hold X>, <&partial_hold_position 54>;
		};
		combo_C {
			timeout-ms = <50>;
			key-positions = <54 44>;
			bindings = <&macro_shift_hold C>, <&partial_hold_position 54>;
		};
		combo_V {
			timeout-ms = <50>;
			key-positions = <54 45>;
			bindings = <&macro_shift_hold V>, <&partial_hold_position 54>;
		};
		combo_B {
			timeout-ms = <50>;
			key-positions = <54 46>;
			bindings = <&macro_shift_hold B>, <&partial_hold_position 54>;
		};
		combo_N {
			timeout-ms = <50>;
			key-positions = <41 49>;
			bindings = <&macro_shift_hold N>, <&partial_hold_position 41>;
		};
		combo_M {
			timeout-ms = <50>;
			key-positions = <41 50>;
			bindings = <&macro_shift_hold M>, <&partial_hold_position 41>;
		};

		combo_lparen {
			timeout-ms = <50>;
			key-positions = <18 74>;
			bindings = <&macro_num_hold LPAR>, <&partial_hold_position 74 &mo LAYER_NUMBERS>;
		};

		combo_rparen {
			timeout-ms = <50>;
			key-positions = <19 74>;
			bindings = <&macro_num_hold RPAR>, <&partial_hold_position 74 &mo LAYER_NUMBERS>;
		};

		combo_lbracket {
			timeout-ms = <50>;
			key-positions = <36 70>;
			bindings = <&macro_sym_hold LBKT>,  <&partial_hold_position 70 &mo LAYER_SYMBOLS>;
		};

		combo_rbracket {
			timeout-ms = <50>;
			key-positions = <37 70>;
			bindings = <&macro_sym_hold RBKT>,  <&partial_hold_position 70 &mo LAYER_SYMBOLS>;
		};

		combo_lbrace {
			timeout-ms = <50>;
			key-positions = <38 70>;
			bindings = <&macro_sym_hold LBRC>,  <&partial_hold_position 70 &mo LAYER_SYMBOLS>;
		};

		combo_rbrace {
			timeout-ms = <50>;
			key-positions = <39 70>;
			bindings = <&macro_sym_hold RBRC>,  <&partial_hold_position 70 &mo LAYER_SYMBOLS>;
		};

		combo_0 {
			timeout-ms = <50>;
			key-positions = <29 74>;
			bindings = <&macro_num_hold NUMBER_0>, <&partial_hold_position 74 &mo LAYER_NUMBERS>;
		};
		combo_1 {
			timeout-ms = <50>;
			key-positions = <30 74>;
			bindings = <&macro_num_hold NUMBER_1>, <&partial_hold_position 74 &mo LAYER_NUMBERS>;
		};
		combo_2 {
			timeout-ms = <50>;
			key-positions = <31 74>;
			bindings = <&macro_num_hold NUMBER_2>, <&partial_hold_position 74 &mo LAYER_NUMBERS>;
		};
		combo_3 {
			timeout-ms = <50>;
			key-positions = <32 74>;
			bindings = <&macro_num_hold NUMBER_3>, <&partial_hold_position 74 &mo LAYER_NUMBERS>;
		};
		combo_4 {
			timeout-ms = <50>;
			key-positions = <33 74>;
			bindings = <&macro_num_hold NUMBER_4>, <&partial_hold_position 74 &mo LAYER_NUMBERS>;
		};
		combo_5 {
			timeout-ms = <50>;
			key-positions = <36 74>;
			bindings = <&macro_num_hold NUMBER_5>, <&partial_hold_position 74 &mo LAYER_NUMBERS>;
		};
		combo_6 {
			timeout-ms = <50>;
			key-positions = <37 74>;
			bindings = <&macro_num_hold NUMBER_6>, <&partial_hold_position 74 &mo LAYER_NUMBERS>;
		};
		combo_7 {
			timeout-ms = <50>;
			key-positions = <38 74>;
			bindings = <&macro_num_hold NUMBER_7>, <&partial_hold_position 74 &mo LAYER_NUMBERS>;
		};
		combo_8 {
			timeout-ms = <50>;
			key-positions = <39 74>;
			bindings = <&macro_num_hold NUMBER_8>, <&partial_hold_position 74 &mo LAYER_NUMBERS>;
		};
		combo_9 {
			timeout-ms = <50>;
			key-positions = <40 74>;
			bindings = <&macro_num_hold NUMBER_9>, <&partial_hold_position 74 &mo LAYER_NUMBERS>;
		};
		combo_minus {
			timeout-ms = <50>;
			key-positions = <24 74>;
			bindings = <&macro_num_hold MINUS>, <&partial_hold_position 74 &mo LAYER_NUMBERS>;
		};
		combo_plus {
			timeout-ms = <50>;
			key-positions = <25 74>;
			bindings = <&macro_num_hold PLUS>, <&partial_hold_position 74 &mo LAYER_NUMBERS>;
		};
		combo_equal {
			timeout-ms = <50>;
			key-positions = <26 74>;
			bindings = <&macro_num_hold EQUAL>, <&partial_hold_position 74 &mo LAYER_NUMBERS>;
		};
		combo_exclam {
			timeout-ms = <50>;
			key-positions = <30 70>;
			bindings = <&kp EXCLAMATION>, <&partial_hold_position 70 &mo LAYER_SYMBOLS>;
		};
		combo_at {
			timeout-ms = <50>;
			key-positions = <31 70>;
			bindings = <&kp AT>, <&partial_hold_position 70 &mo LAYER_SYMBOLS>;
		};
		combo_pound {
			timeout-ms = <50>;
			key-positions = <32 70>;
			bindings = <&kp POUND>, <&partial_hold_position 70 &mo LAYER_SYMBOLS>;
		};
		combo_dollar {
			timeout-ms = <50>;
			key-positions = <33 70>;
			bindings = <&kp DOLLAR>, <&partial_hold_position 70 &mo LAYER_SYMBOLS>;
		};
		combo_percent {
			timeout-ms = <100>; // I tend to miss the percent combo so give it more time.
			key-positions = <34 70>;
			bindings = <&kp PERCENT>, <&partial_hold_position 70 &mo LAYER_SYMBOLS>;
		};
		combo_caret {
			timeout-ms = <50>;
			key-positions = <17 70>;
			bindings = <&kp CARET>, <&partial_hold_position 70 &mo LAYER_SYMBOLS>;
		};
		combo_amp {
			timeout-ms = <50>;
			key-positions = <18 70>;
			bindings = <&kp AMPERSAND>, <&partial_hold_position 70 &mo LAYER_SYMBOLS>;
		};
		combo_ast {
			timeout-ms = <50>;
			key-positions = <19 70>;
			bindings = <&kp ASTERISK>, <&partial_hold_position 70 &mo LAYER_SYMBOLS>;
		};
		combo_backslash {
			timeout-ms = <50>;
			key-positions = <20 70>;
			bindings = <&kp BACKSLASH>, <&partial_hold_position 70 &mo LAYER_SYMBOLS>;
		};
		combo_DelWord {
			timeout-ms = <50>;
			key-positions = <46 70>;
			bindings = <&kp LC(BACKSPACE)>;
			layers = <LAYER_MAIN>;
		};
		combo_MacDelWord {
			timeout-ms = <50>;
			key-positions = <46 70>;
			bindings = <&kp LA(BACKSPACE)>;
			layers = <LAYER_MAC>;
		};
	};
	keymap {
		compatible = "zmk,keymap";
		layer_0 {
			bindings = <
				&bootloader
				&kp GRAV                   &none            &none            &none                &none                 &off                         &on           &kp LG(LC(Q))     &kp C_PLAY_PAUSE      &none                   &none                &none             &none              &none
				&kp TAB                    &kp Q            &kp W            &kp E                &kp R                 &kp T                        &none         &kp LA(GRAVE)     &kp Y                 &kp U                   &kp I                &kp O             &kp P              &none
				&kp LEFT_CONTROL           &kp A            &kp S            &kp D                &kp F                 &kp G                                                        &kp H                 &kp J                   &kp K                &kp L             &kp SEMICOLON      &kp APOSTROPHE
				&caps_tap LEFT_SHIFT DUMMY &kp Z            &kp X            &kp C                &kp V                 &kp B                        &kp LC(TAB)   &kp LG(TAB)       &kp N                 &kp M                   &kp CMMA             &kp DOT           &kp FSLH           &caps_tap RIGHT_SHIFT DUMMY
				&kp LEFT_META              &kp LEFT_CONTROL &kp LALT         &kp C_AC_BACK        &kp C_AC_FORWARD                                                                                        &out OUT_USB            &out OUT_BLE         &kp RALT          &kp RIGHT_CONTROL  &kp RIGHT_META
				                                                                                              &bt_clear                    &macro_to_mac &kp C_VOLUME_UP   &bt BT_SEL 0
				                                                                        &kp SPACE             &lt_bspc LAYER_SYMBOLS DUMMY &none         &kp C_VOLUME_DOWN &lt LAYER_MOVE ESCAPE &lt LAYER_NUMBERS ENTER
				                                                                                                                           &none         &kp C_MUTE
			>;
		};
		layer_1 {
			bindings = <
				&bootloader
				&trans &trans        &trans &trans       &trans        &trans &trans         &trans        &trans                   &trans &trans &trans                &trans             &trans
				&trans &trans        &trans &trans       &trans        &trans &trans         &kp LG(GRAVE) &trans                   &trans &trans &trans                &trans             &trans
				&trans &trans        &trans &trans       &trans        &trans                              &trans                   &trans &trans &trans                &trans             &trans
				&trans &trans        &trans &trans       &trans        &trans &trans         &trans        &trans                   &trans &trans &trans                &trans             &trans
				&trans &kp LEFT_META &trans &kp LG(LEFT) &kp LG(RIGHT)                                                              &trans &trans &trans                &kp RIGHT_META     &trans
				                                                       &trans &macro_to_linux &trans       &trans
				                                         &trans        &trans &trans         &trans        &lt LAYER_MACMOVE ESCAPE &trans
				                                                              &trans         &trans
			>;
		};
		layer_2 {
			bindings = <
				&bootloader
				&trans &trans          &trans      &trans        &trans       &trans        &trans &trans &trans &trans &trans &trans &trans &trans
				&trans &trans          &kp CARET   &kp AMPERSAND &kp ASTERISK &kp BACKSLASH &trans &trans &trans &trans &trans &trans &trans &trans
				&trans &kp EXCLAMATION &kp AT_SIGN &kp HASH      &kp DOLLAR   &kp PERCENT                 &trans &macro_left_bracket &macro_right_bracket &macro_left_brace &macro_right_brace &trans
				&trans &trans          &trans      &trans        &trans       &trans        &trans &trans &trans &trans &trans &trans &trans &trans
				&trans &trans          &trans      &trans        &trans                                          &trans &trans &trans &trans &trans
				                                                              &trans        &trans &trans &trans
				                                                 &trans       &trans        &trans &trans &trans &trans
				                                                                            &trans &trans
			>;
		};
		layer_3 {
			bindings = <
				&bootloader
				&trans &trans &trans &trans &trans &trans &trans &trans &trans         &trans         &trans        &trans          &trans &trans
				&trans &trans &trans &trans &trans &trans &trans &trans &kp HOME       &kp LC(LEFT)   &kp LC(RIGHT) &kp END         &trans &trans
				&trans &trans &trans &trans &trans &trans               &kp LEFT_ARROW &kp DOWN_ARROW &kp UP_ARROW  &kp RIGHT_ARROW &trans &trans
				&trans &trans &trans &trans &trans &trans &trans &trans &trans         &trans         &trans        &trans          &trans &trans
				&trans &trans &trans &trans &trans                                     &trans         &trans        &trans          &trans &trans
				                                   &trans &trans &trans &trans
				                            &trans &trans &trans &trans &trans         &trans
				                                          &trans &trans
			>;
		};
		layer_4 {
			bindings = <
				&bootloader
				&trans &trans &trans &trans &trans &trans &trans &trans &trans         &trans         &trans        &trans          &trans &trans
				&trans &trans &trans &trans &trans &trans &trans &trans &kp HOME       &kp LA(LEFT)   &kp LA(RIGHT) &kp END         &trans &trans
				&trans &trans &trans &trans &trans &trans               &kp LEFT_ARROW &kp DOWN_ARROW &kp UP_ARROW  &kp RIGHT_ARROW &trans &trans
				&trans &trans &trans &trans &trans &trans &trans &trans &trans         &trans         &trans        &trans          &trans &trans
				&trans &trans &trans &trans &trans                                     &trans         &trans        &trans          &trans &trans
				                                   &trans &trans &trans &trans
				                            &trans &trans &trans &trans &trans         &trans
				                                          &trans &trans
			>;
		};
		layer_5 {
			bindings = <
				&bootloader
				&trans       &trans       &trans       &trans               &trans                &trans   &trans &trans  &trans        &trans       &trans       &trans       &trans       &trans
				&trans       &trans       &trans       &kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &trans   &trans &trans  &trans        &kp MINUS    &kp PLUS     &kp EQUAL    &trans       &trans
				&kp NUMBER_0 &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3         &kp NUMBER_4          &trans                  &trans        &kp NUMBER_5 &kp NUMBER_6 &kp NUMBER_7 &kp NUMBER_8 &kp NUMBER_9
				&trans       &trans       &trans       &trans               &trans                &trans   &trans &trans  &trans        &trans       &trans       &trans       &trans       &trans
				&trans       &trans       &trans       &trans               &trans                                                      &trans       &trans       &trans       &trans       &trans
				                                                                 &trans &trans &trans &trans
				                                                    &trans       &trans &trans &trans &trans &trans
				                                                                        &trans &trans

			>;
		};
		layer_6 {
			bindings = <
				&bootloader
				&none        &none        &none        &none        &none        &none  &trans &none  &none  &none        &none        &none        &none        &none 
				&none        &none        &none        &none        &none        &none  &none  &none  &none  &none        &none        &none        &none        &none 
				&none  	     &none        &none        &none        &none        &none                &none  &none        &none        &none        &none        &none 
				&none        &none        &none        &none        &none        &none  &none  &none  &none  &none        &none        &none        &none        &none 
				&none        &none        &none        &none        &none                                    &none        &none        &none        &none        &none 
				                                                                 &none  &none  &none  &none 
				                                                    &none        &none  &none  &none  &none  &none 
				                                                                        &none  &none 
			>;
		};
	};

};
