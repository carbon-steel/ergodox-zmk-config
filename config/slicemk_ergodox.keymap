#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

#define LAYER_MAIN 0
#define LAYER_MAC 1
#define LAYER_SYMBOLS 2
#define LAYER_MOVE 3
#define LAYER_MACMOVE 4
#define LAYER_NUMBERS 5

#define AS(keycode) &as LS(keycode) keycode // Autoshift Macro

&lt {
	flavor = "balanced";
	tapping_term_ms = <200>;
};

/ {
	macros {
		ZMK_MACRO(macro_right_brace, wait-ms = <0>; tap-ms = <0>; bindings = <&macro_tap &kp RIGHT_BRACE>;)
		ZMK_MACRO(macro_left_brace, wait-ms = <0>; tap-ms = <0>; bindings = <&macro_tap &kp LEFT_BRACE>;)
		ZMK_MACRO(macro_right_bracket, wait-ms = <0>; tap-ms = <0>; bindings = <&macro_tap &kp RIGHT_BRACKET>;)
		ZMK_MACRO(macro_left_bracket, wait-ms = <0>; tap-ms = <0>; bindings = <&macro_tap &kp LEFT_BRACKET>;)
		ZMK_MACRO(macro_to_mac, wait-ms = <0>; tap-ms = <5>; bindings = <&to LAYER_MAC &rgb_ug RGB_COLOR_HSB(128,100,100) &rgb_ug RGB_TOG &bl BL_TOG>;)
		ZMK_MACRO(macro_to_linux, wait-ms = <0>; tap-ms = <5>; bindings = <&to LAYER_MAIN &rgb_ug RGB_TOG &bl BL_TOG>;)
	};
	behaviors {
		as: auto_shift {
			compatible = "zmk,behavior-hold-tap";
			label = "AUTO_SHIFT";
			#binding-cells = <2>;
			tapping_term_ms = <175>;
			quick_tap_ms = <0>;
			flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
		};
	};
	combo {
		compatible = "zmk,combos";
		combo_Q {
			timeout-ms = <50>;
			key-positions = <16 54>;
			bindings = <&kp LS(Q)>;
		};
		combo_W {
			timeout-ms = <50>;
			key-positions = <17 54>;
			bindings = <&kp LS(W)>;
		};
		combo_E {
			timeout-ms = <50>;
			key-positions = <18 54>;
			bindings = <&kp LS(E)>;
		};
		combo_R {
			timeout-ms = <50>;
			key-positions = <19 54>;
			bindings = <&kp LS(R)>;
		};
		combo_T {
			timeout-ms = <50>;
			key-positions = <20 54>;
			bindings = <&kp LS(T)>;
		};
		combo_Y {
			timeout-ms = <50>;
			key-positions = <23 41>;
			bindings = <&kp LS(Y)>;
		};
		combo_U {
			timeout-ms = <50>;
			key-positions = <24 41>;
			bindings = <&kp LS(U)>;
		};
		combo_I {
			timeout-ms = <50>;
			key-positions = <25 41>;
			bindings = <&kp LS(I)>;
		};
		combo_O {
			timeout-ms = <50>;
			key-positions = <26 41>;
			bindings = <&kp LS(O)>;
		};
		combo_P {
			timeout-ms = <50>;
			key-positions = <27 41>;
			bindings = <&kp LS(P)>;
		};
		combo_A {
			timeout-ms = <50>;
			key-positions = <30 54>;
			bindings = <&kp LS(A)>;
		};
		combo_S {
			timeout-ms = <50>;
			key-positions = <54 31>;
			bindings = <&kp LS(S)>;
		};
		combo_D {
			timeout-ms = <50>;
			key-positions = <54 32>;
			bindings = <&kp LS(D)>;
		};
		combo_F {
			timeout-ms = <50>;
			key-positions = <54 33>;
			bindings = <&kp LS(F)>;
		};
		combo_G {
			timeout-ms = <50>;
			key-positions = <54 34>;
			bindings = <&kp LS(G)>;
		};
		combo_H {
			timeout-ms = <50>;
			key-positions = <41 35>;
			bindings = <&kp LS(H)>;
		};
		combo_J {
			timeout-ms = <50>;
			key-positions = <41 36>;
			bindings = <&kp LS(J)>;
		};
		combo_K {
			timeout-ms = <50>;
			key-positions = <41 37>;
			bindings = <&kp LS(K)>;
		};
		combo_L {
			timeout-ms = <50>;
			key-positions = <41 38>;
			bindings = <&kp LS(L)>;
		};
		combo_Z {
			timeout-ms = <50>;
			key-positions = <54 42>;
			bindings = <&kp LS(Z)>;
		};
		combo_X {
			timeout-ms = <50>;
			key-positions = <54 43>;
			bindings = <&kp LS(X)>;
		};
		combo_C {
			timeout-ms = <50>;
			key-positions = <54 44>;
			bindings = <&kp LS(C)>;
		};
		combo_V {
			timeout-ms = <50>;
			key-positions = <54 45>;
			bindings = <&kp LS(V)>;
		};
		combo_B {
			timeout-ms = <50>;
			key-positions = <54 46>;
			bindings = <&kp LS(B)>;
		};
		combo_N {
			timeout-ms = <50>;
			key-positions = <41 49>;
			bindings = <&kp LS(N)>;
		};
		combo_M {
			timeout-ms = <50>;
			key-positions = <41 50>;
			bindings = <&kp LS(M)>;
		};

		combo_0 {
			timeout-ms = <50>;
			key-positions = <29 74>;
			bindings = <&kp NUMBER_0>;
		};
		combo_1 {
			timeout-ms = <50>;
			key-positions = <30 74>;
			bindings = <&kp NUMBER_1>;
		};
		combo_2 {
			timeout-ms = <50>;
			key-positions = <31 74>;
			bindings = <&kp NUMBER_2>;
		};
		combo_3 {
			timeout-ms = <50>;
			key-positions = <32 74>;
			bindings = <&kp NUMBER_3>;
		};
		combo_4 {
			timeout-ms = <50>;
			key-positions = <33 74>;
			bindings = <&kp NUMBER_4>;
		};
		combo_5 {
			timeout-ms = <50>;
			key-positions = <36 74>;
			bindings = <&kp NUMBER_5>;
		};
		combo_6 {
			timeout-ms = <50>;
			key-positions = <37 74>;
			bindings = <&kp NUMBER_6>;
		};
		combo_7 {
			timeout-ms = <50>;
			key-positions = <38 74>;
			bindings = <&kp NUMBER_7>;
		};
		combo_8 {
			timeout-ms = <50>;
			key-positions = <39 74>;
			bindings = <&kp NUMBER_8>;
		};
		combo_9 {
			timeout-ms = <50>;
			key-positions = <40 74>;
			bindings = <&kp NUMBER_9>;
		};

		combo_exclam {
			timeout-ms = <50>;
			key-positions = <30 70>;
			bindings = <&kp EXCLAMATION>;
		};
		combo_at {
			timeout-ms = <50>;
			key-positions = <31 70>;
			bindings = <&kp AT>;
		};
		combo_pound {
			timeout-ms = <50>;
			key-positions = <32 70>;
			bindings = <&kp POUND>;
		};
		combo_dollar {
			timeout-ms = <50>;
			key-positions = <33 70>;
			bindings = <&kp DOLLAR>;
		};
		combo_percent {
			timeout-ms = <50>;
			key-positions = <34 70>;
			bindings = <&kp PERCENT>;
		};
		combo_caret {
			timeout-ms = <50>;
			key-positions = <17 70>;
			bindings = <&kp CARET>;
		};
		combo_amp {
			timeout-ms = <50>;
			key-positions = <17 70>;
			bindings = <&kp AMPERSAND>;
		};
		combo_ast {
			timeout-ms = <50>;
			key-positions = <19 70>;
			bindings = <&kp ASTERISK>;
		};
		combo_backslash {
			timeout-ms = <50>;
			key-positions = <20 70>;
			bindings = <AS(BACKSLASH)>;
		};
		combo_DelWord {
			timeout-ms = <50>;
			key-positions = <46 70>;
			bindings = <&kp LC(BACKSPACE)>;
			layers = <LAYER_MAIN>;
		};
		combo_MacDelWord {
			timeout-ms = <50>;
			key-positions = <46 70>;
			bindings = <&kp LA(BACKSPACE)>;
			layers = <LAYER_MAC>;
		};
	};
	keymap {
		compatible = "zmk,keymap";
		layer_0 {
			bindings = <
				&bootloader
				&kp GRAV         &kp LESS_THAN    &kp GREATER_THAN &kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &none                       &none         &none             &kp C_PLAY_PAUSE      &macro_left_bracket     &macro_right_bracket &macro_left_brace &macro_right_brace &kp EQUAL
				&kp TAB          &kp Q            &kp W            &kp E                &kp R                 &kp T                       &caps_word    &kp LA(GRAVE)     &kp Y                 &kp U                   &kp I                &kp O             &kp P              AS(MINUS)
				&kp LEFT_CONTROL &kp A            &kp S            &kp D                &kp F                 &kp G                                                       &kp H                 &kp J                   &kp K                &kp L             &kp SEMICOLON      &kp APOSTROPHE
				&kp LEFT_SHIFT   &kp Z            &kp X            &kp C                &kp V                 &kp B                       &kp LC(TAB)   &kp LG(TAB)       &kp N                 &kp M                   &kp CMMA             &kp DOT           &kp FSLH           &kp RIGHT_SHIFT
				&kp LEFT_META    &kp LEFT_CONTROL &kp LALT         &kp C_AC_BACK        &kp C_AC_FORWARD                                                                                        &out OUT_USB            &out OUT_BLE         &kp RALT          &kp RIGHT_CONTROL  &kp RIGHT_META
				                                                                                              &none                       &macro_to_mac  &kp C_VOLUME_UP   &bt BT_SEL 0
				                                                                        &kp SPACE             &lt LAYER_SYMBOLS BACKSPACE &none         &kp C_VOLUME_DOWN &lt LAYER_MOVE ESCAPE &lt LAYER_NUMBERS ENTER
				                                                                                                                          &none         &kp C_MUTE
			>;
		};
		layer_1 {
			bindings = <
				&bootloader
				&trans &trans        &trans &trans       &trans        &trans &trans         &trans        &trans                   &trans &trans &trans                &trans             &trans
				&trans &trans        &trans &trans       &trans        &trans &trans         &kp LG(GRAVE) &trans                   &trans &trans &trans                &trans             &trans
				&trans &trans        &trans &trans       &trans        &trans                              &trans                   &trans &trans &trans                &trans             &trans
				&trans &trans        &trans &trans       &trans        &trans &trans         &trans        &trans                   &trans &trans &trans                &trans             &trans
				&trans &kp LEFT_META &trans &kp LG(LEFT) &kp LG(RIGHT)                                                              &trans &trans &trans                &kp RIGHT_META     &trans
				                                                       &trans &macro_to_linux &trans       &trans
				                                         &trans        &trans &trans         &trans        &lt LAYER_MACMOVE ESCAPE &trans
				                                                              &trans         &trans
			>;
		};
		layer_2 {
			bindings = <
				&bootloader
				&trans &trans          &trans      &trans        &trans       &trans        &trans &trans &trans &trans &trans &trans &trans &trans
				&trans &trans          &kp CARET   &kp AMPERSAND &kp ASTERISK &kp BACKSLASH &trans &trans &trans &trans &trans &trans &trans &trans
				&trans &kp EXCLAMATION &kp AT_SIGN &kp HASH      &kp DOLLAR   &kp PERCENT                 &trans &trans &trans &trans &trans &trans
				&trans &trans          &trans      &trans        &trans       &trans        &trans &trans &trans &trans &trans &trans &trans &trans
				&trans &trans          &trans      &trans        &trans                                          &trans &trans &trans &trans &trans
				                                                              &trans        &trans &trans &trans
				                                                 &trans       &trans        &trans &trans &trans &trans
				                                                                            &trans &trans
			>;
		};
		layer_3 {
			bindings = <
				&bootloader
				&trans &trans &trans &trans &trans &trans &trans &trans &trans         &trans         &trans        &trans          &trans &trans
				&trans &trans &trans &trans &trans &trans &trans &trans &kp HOME       &kp LC(LEFT)   &kp LC(RIGHT) &kp END         &trans &trans
				&trans &trans &trans &trans &trans &trans               &kp LEFT_ARROW &kp DOWN_ARROW &kp UP_ARROW  &kp RIGHT_ARROW &trans &trans
				&trans &trans &trans &trans &trans &trans &trans &trans &trans         &trans         &trans        &trans          &trans &trans
				&trans &trans &trans &trans &trans                                     &trans         &trans        &trans          &trans &trans
				                                   &trans &trans &trans &trans
				                            &trans &trans &trans &trans &trans         &trans
				                                          &trans &trans
			>;
		};
		layer_4 {
			bindings = <
				&bootloader
				&trans &trans &trans &trans &trans &trans &trans &trans &trans         &trans         &trans        &trans          &trans &trans
				&trans &trans &trans &trans &trans &trans &trans &trans &kp HOME       &kp LA(LEFT)   &kp LA(RIGHT) &kp END         &trans &trans
				&trans &trans &trans &trans &trans &trans               &kp LEFT_ARROW &kp DOWN_ARROW &kp UP_ARROW  &kp RIGHT_ARROW &trans &trans
				&trans &trans &trans &trans &trans &trans &trans &trans &trans         &trans         &trans        &trans          &trans &trans
				&trans &trans &trans &trans &trans                                     &trans         &trans        &trans          &trans &trans
				                                   &trans &trans &trans &trans
				                            &trans &trans &trans &trans &trans         &trans
				                                          &trans &trans
			>;
		};
		layer_5 {
			bindings = <
				&bootloader
				&trans       &trans       &trans       &trans       &trans       &trans &trans &trans &trans &trans       &trans       &trans       &trans       &trans
				&trans       &trans       &trans       &trans       &trans       &trans &trans &trans &trans &trans       &trans       &trans       &trans       &trans
				&kp NUMBER_0 &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3 &kp NUMBER_4 &trans               &trans &kp NUMBER_5 &kp NUMBER_6 &kp NUMBER_7 &kp NUMBER_8 &kp NUMBER_9
				&trans       &trans       &trans       &trans       &trans       &trans &trans &trans &trans &trans       &trans       &trans       &trans       &trans
				&trans       &trans       &trans       &trans       &trans                                   &trans       &trans       &trans       &trans       &trans
				                                                                 &trans &trans &trans &trans
				                                                    &trans       &trans &trans &trans &trans &trans
				                                                                        &trans &trans
			>;
		};
	};

};
